name: "Test typescript-action"
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - master
      - "releases/*"

jobs:
  connecti:
    strategy:
      matrix:
        runs-on: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: jaxxstorm/connecti
          arch: amd64
          cache: enable
  crd2pulumi:
    strategy:
      matrix:
        runs-on: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: pulumi/crd2pulumi
          tag: v1.0.10
  change-aws-credentials:
    strategy:
      matrix:
        runs-on: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: jaxxstorm/change-aws-credentials
          tag: v0.4.0
      - run: change-aws-credentials version
  tf2pulumi:
    strategy:
      matrix:
        version: ["v0.7.0", "v0.8.0", "latest"]
        runs-on: ["ubuntu-latest", "macos-latest", "windows-latest"]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: pulumi/tf2pulumi
          tag: ${{ matrix.version }}
      - run: tf2pulumi version
  tfsec:
    strategy:
      matrix:
        version: ["v1.18.0", "v1.19.0", "latest"]
        runs-on: ["ubuntu-latest", "macos-latest", "windows-latest"]
        arch: ["amd64"]
        include:
          - runs-on: "ubuntu-latest"
            platform: linux
          - runs-on: "macos-latest"
            platform: darwin
          - runs-on: "windows-latest"
            platform: windows
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: aquasecurity/tfsec
          tag: ${{ matrix.version }}
          platform: ${{ matrix.platform }}
          arch: ${{ matrix.arch }}
      - run: tfsec --version
  opentelemetry-ocb:
    strategy:
      matrix:
        version: [ "v0.62.1", "v0.62.0" ]
        runs-on: [ "ubuntu-latest", "macos-latest"]
        arch: [ "amd64" ]
        include:
          - runs-on: "ubuntu-latest"
            platform: linux
          - runs-on: "macos-latest"
            platform: darwin
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: open-telemetry/opentelemetry-collector
          tag: ${{ matrix.version }}
          platform: ${{ matrix.platform }}
          arch: ${{ matrix.arch }}
          extension-matching: disable
          rename-to: ocb
          chmod: 0755
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ocb version
  mozilla-grcov:
    strategy:
      matrix:
        version: [ "v0.8.12", "v0.8.7", "latest" ]
        runs-on: [ "ubuntu-latest", "macos-latest" ]
        arch: [ "x86_64" ]
        include:
          - runs-on: "ubuntu-latest"
            platform: linux
          - runs-on: "macos-latest"
            platform: darwin
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: mozilla/grcov
          tag: ${{ matrix.version }}
          platform: ${{ matrix.platform }}
          arch: ${{ matrix.arch }}
          extension: "\\.bz2"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: grcov --version
  wasmer:
    strategy:
      matrix:
        version: [ "latest" ]
        runs-on: [ "ubuntu-latest" ]
        arch: [ "amd64" ]
        include:
          - runs-on: "ubuntu-latest"
            platform: linux
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: wasmerio/wasmer
          binaries-location: bin
          chmod: 0755
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: wasmer --version
  prometheus:
    strategy:
      matrix:
        version: [ "latest" ]
        runs-on: [ "ubuntu-latest" ]
        arch: [ "amd64" ]
        include:
          - runs-on: "ubuntu-latest"
            platform: linux
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: prometheus/prometheus
          tag: 'v2.37.9'
          platform: linux
          arch: amd64
          cache: enable
          binaries-location: prometheus-2.37.9.linux-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: promtool --version
  cargo_make:
    strategy:
      matrix:
        version: [ "latest" ]
        runs-on: [ "ubuntu-latest" ]
        arch: [ "amd64" ]
        include:
          - runs-on: "ubuntu-latest"
            platform: linux
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
      - run: npm run build
      - uses: ./
        with:
          repo: sagiegurari/cargo-make
          platform: unknown-linux-gnu
          arch: x86_64
          cache: enable
          binaries-location: cargo-make-v0.36.12-x86_64-unknown-linux-gnu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo-make
